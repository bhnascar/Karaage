@mixin font($font: 0, $size: 10, $color: null, $textAlign: null) {
  $remSize: $size/16;
  @if $font != null {
    @if $font == 0 {
      font-size: #{$size}px;
      font-size: #{$remSize}rem;
      font-family: 'Open Sans', serif;
    } @else if $font == 1 {
      font-size: #{$size}px;
      font-size: #{$remSize}rem;
      font-family: 'Arial' serif;
    } @else if $font == 2 {
      font-size: #{$size}px;
      font-size: #{$remSize}rem;
      font-family: '', serif;
    }
  }

  @if $color != null {
    color: $color;
  }

  @if $textAlign != null {
    text-align: $textAlign;
  }
}

@mixin font-size($size, $color: null, $textAlign: null) {
  $remSize: $size/16;
  font-size: #{$size}px;
  font-size: #{$remSize}rem;

  @if $color != null {
    color: $color;
  }

  @if $textAlign != null {
    text-align: $textAlign;
  }
}

@mixin opacity($opacity: 0.5) {
  filter: alpha(opacity=($opacity * 100));
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  opacity: $opacity;
}

@mixin border-radius($radius: 5px) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin border($colour: #000, $coordinates: 1px, $style: solid) {

  @if $colour != 0 {

    @if $coordinates == 1px {
      border: $coordinates $style $colour;
    } @else {
      $top: nth($coordinates, 1);
      $right: nth($coordinates, 2);
      $bottom: nth($coordinates, 3);
      $left: nth($coordinates, 4);

      @if not(unitless($top)) {
        border-top: $top $style $colour;
      }
      @if not(unitless($right)) {
        border-right: $right $style $colour;
      }
      @if not(unitless($bottom)) {
        border-bottom: $bottom $style $colour;
      }
      @if not(unitless($left)) {
        border-left: $left $style $colour;
      }
    }
  } @else {
    border: 0;
  }
}

@mixin box-shadow($params: 0 0 0 0, $color: rgba(0, 0, 0, .4), $inset: null) {
  @if $inset != null {
    -webkit-box-shadow: $inset $params $color;
    -moz-box-shadow: $inset $params $color;
    box-shadow: $inset $params $color;
  } @else {
    -webkit-box-shadow: $params $color;
    -moz-box-shadow: $params $color;
    box-shadow: $params $color;
  }
}

@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
  -moz-transition: $what $length $easing;
  -o-transition: $what $length $easing;
  -webkit-transition: $what $length $easing;
  -ms-transition: $what $length $easing;
  transition: $what $length $easing;
}

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4)) {
  text-shadow: $x $y $blur $color;
}

@mixin button-gradient($startColor: #1e5799, $middleColor: #4c92cd, $endColor: #093674, $type: default, $textColor: default) {

  background: #1e5799;
  background: -moz-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: -webkit-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: -o-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: -ms-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: linear-gradient(to bottom, $startColor 0%, $middleColor 0%, $endColor 100%);
  @include border(#064ADB);

  @include border-radius(5px);
  -moz-box-shadow: 1px 1px 0 0 rgba(255, 255, 255, .4) inset, 0 1px 0 rgba(0, 0, 0, .3);
  -webkit-box-shadow: 1px 1px 0 0 rgba(255, 255, 255, .4) inset, 0 1px 0 rgba(0, 0, 0, .3);
  box-shadow: 0px 1px 0 0 rgba(255, 255, 255, .4) inset, 0 1px 0 rgba(0, 0, 0, .3);
  text-decoration: none;
  white-space: nowrap;
  @include font(2);

  @if $textColor == default {
    color: #fff;
    @include text-shadow(1px, 1px, 0, rgba(46, 46, 46, 0.6));
  } @else {
    color: #313131;
    @include text-shadow(-1px, -2px, 0, rgba(255, 255, 255, 0.6));
  }

  @if $type == dark {
    &:hover {
      background: -moz-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: -webkit-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: -o-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: -ms-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: linear-gradient(to bottom, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      color: #313131;
    }
  } @else {
    &:hover {
      background: -moz-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: -webkit-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: -o-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: -ms-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: linear-gradient(to bottom, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      color: #fff;
    }
  }

}

@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
  background-color: transparent;
  background-color: rgba($r, $g, $b, $opacity);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
  zoom:   1;
}

@mixin box-sizing($type: border-box) {
  -webkit-box-sizing:   $type;
  -moz-box-sizing:      $type;
  box-sizing:           $type;
}

@mixin flip($scaleX: -1) {
  -moz-transform:    scaleX($scaleX);
  -o-transform:      scaleX($scaleX);
  -webkit-transform: scaleX($scaleX);
  transform:         scaleX($scaleX);
  filter:            FlipH;
  -ms-filter:        "FlipH";
}

@mixin outline-radius($radius: 5px) {
  -webkit-outline-radius: $radius;
  -moz-outline-radius:    $radius;
  outline-radius:         $radius;
}

@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  -moz-transform: rotate($deg + deg);
  -o-transform: rotate($deg + deg);
  -webkit-transform: rotate($deg + deg);
  -ms-transform: rotate($deg + deg);
  transform: rotate($deg + deg);
  filter: progid:DXImageTransform.Microsoft.Matrix(
        M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
  zoom: 1;
}

@mixin gradient($startColor, $endColor) {
  background: $startColor; /* Old browsers */
  background: -moz-linear-gradient(top, $startColor 0%, $endColor 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $startColor), color-stop(100%, $endColor)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, $startColor 0%, $endColor 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $startColor 0%, $endColor 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $startColor 0%, $endColor 100%); /* IE10+ */
  background: linear-gradient(to bottom, $startColor 0%, $endColor 100%); /* W3C */
}

@mixin texture-btn {
//  padding: 0;
//  border-top: 1px solid #8fbbe0;
//  border-left: 1px solid #6d9abf;
//  border-right: 1px solid transparent;
//  border-bottom: 1px solid #093674;
//  @include box-shadow(0px 0px 2px, rgba(0, 0, 0, 1));
//  @include font(2, 24, $text-color3, center);
//  display: inline-block;
//  line-height: 28px;
//  cursor: pointer;
}

@mixin clearfix {
  zoom: 1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

@mixin fixmargin-top {
  margin-top: -1px;
  padding-top: 1px;
}

